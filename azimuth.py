#!/usr/bin/python3
#-*- coding: utf-8 -*-

import math

# DD.DDD°
# 已经A、B两点的经纬度分别为Aj、Aw，Bj、Bw，计算B点相对于A点的方位角

'''
Aw = 22.571235
Aj = 113.949747
Bw = 22.571500
Bj = 113.950086


Aj = 80
Aw = 40
Bj = 120
Bw = 37.55
'''
#石鼓山公园，小米手机
Aw = 22.579948977777833
Aj = 113.943597882638333
Bw = 22.579958510763833
Bj = 113.943612469791667


Aw = [22.57994928,22.57994928,22.57994928,22.57994887,22.57994887,22.5799498,22.5799498,22.5799498,22.57995012,22.57995012,22.57995012,22.57994923,22.57994923,22.57994923,22.57994917,22.57994917,22.57994917,22.57994847,22.57994847,22.57994847,22.57994837,22.57994837,22.57994825,22.57994825,22.57994825,22.57994823,22.57994823,22.57994825,22.57994825,22.57994825,22.57994852,22.57994852,22.57994852,22.57994822,22.57994822,22.57994822,22.57994837,22.57994837,22.57994837,22.57994888,22.57994888,22.57994888,22.57995022,22.57995022,22.57995022,22.5799499,22.5799499,22.5799499,]
Aj = [113.9435962,113.9435962,113.9435962,113.9435967,113.9435967,113.9435975,113.9435975,113.9435975,113.943597,113.943597,113.943597,113.9435966,113.9435966,113.9435966,113.9435963,113.9435963,113.9435963,113.9435971,113.9435971,113.9435971,113.9435977,113.9435977,113.9435985,113.9435985,113.9435985,113.9435987,113.9435987,113.9435987,113.9435987,113.9435987,113.9435986,113.9435986,113.9435986,113.9435981,113.9435981,113.9435981,113.943598,113.943598,113.943598,113.9435987,113.9435987,113.9435987,113.9435992,113.9435992,113.9435992,113.9436004,113.9436004,113.9436004,]
R = 6371393

print("w=", Bw-Aw, "j=", Bj-Aj)


print("——————————————————————球面正弦公式法——————————————————————")
cosc = math.cos((90 - Bw)*math.pi/180) * math.cos((90 - Aw)*math.pi/180) + math.sin((90 - Bw)*math.pi/180) * math.sin((90 - Aw)*math.pi/180) * math.cos((Bj - Aj)*math.pi/180)
print("cosc = ", cosc)
sinc = math.sqrt(1 - math.pow(cosc, 2))
print("sinc = ", sinc)
#sina = math.sin((90 - Bw)*math.pi/180) * math.sin((Bj - Aj)*math.pi/180) / sinc
#print("sina = ", sina)

A = math.asin(math.sin((90 - Bw)*math.pi/180) * math.sin((Bj - Aj)*math.pi/180) / sinc) * 180 / math.pi
print("A = ", A)

L = R * math.acos(cosc)
print("L = ", L)

print("——————————————————————简化正切法——————————————————————")
# 判断目标点的象限
k = (Bj - Aj) * math.cos(Bw * math.pi / 180) / (Bw - Aw)
print("k = ", k)
A = math.atan(k) * 180 / math.pi
print("A = ", A)
L = (abs(Bw - Aw) * 111000 / math.cos(math.atan(k)))
print("L = ", L)

#由方位角计算
print("——————————————————————平面直角坐标法——————————————————————")
A2 = math.atan((Bj - Aj) * math.cos(Bw*math.pi/180) / (Bw - Aw)) * 180 / math.pi
print("A2 = ", A2)


if k > 0:           #B位于1/3象限
    print("13象限")
    if Bw > Aw:     #B位于1象限
        print("1象限")
    elif Bw < Aw:   #B位于3象限
        print("3象限")
elif k < 0:         #B位于2/4象限
    print("24象限")
    if Bw > Aw:     #B位于2象限
        print("2象限")
    elif  Bw < Aw:  #B位于4象限
        print("4象限")



#极坐标法计算
print("——————————————————————极坐标法——————————————————————")
x = math.sin((Bj - Aj)*math.pi/180) * math.cos(Bw*math.pi/180)
print("x = ", x)
y = math.cos(Aw*math.pi/180) * math.sin(Bw*math.pi/180) -  math.sin(Aw*math.pi/180) * math.cos(Bw*math.pi/180) * math.cos((Bj - Aj)*math.pi/180)
print("y = ", y)
A = math.atan2(x, y) * 180 / math.pi
print("A = ", A)
